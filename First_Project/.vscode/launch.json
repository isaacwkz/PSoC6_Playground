{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    //
    // NOTE for JLink users:
    //
    //    Please create the following setting in your VSCode User Settings or in
    //    your global PATH.  Cortex-Debug needs to find the specific gdb-server
    //    you want to use.
    //
    //       Windows     : "cortex-debug.JLinkGDBServerPath": "<JLinkInstallDir>/JLinkGDBServerCL"
    //       Linux / Mac : "cortex-debug.JLinkGDBServerPath": "<JLinkInstallDir>/JLinkGDBServer"
    //
    //    User settings are located in:
    //
    //       Windows : %APPDATA%/Code/User/settings.json
    //       Mac     : $HOME/Library/Application Support/Code/User/settings.json
    //       Linux   : $HOME/.config/Code/User/settings.json
    //
    //    You can use the VSCode Settings UI to edit the files mentioned above.
    //
    //    For the JLink configurations in this file, the "device" name comes from
    //    the list found here:
    //       https://www.segger.com/downloads/supported-devices.php
    //
    //    To use KitProg3/MiniProg4 JTAG interface, update transport in openocd.tcl located at the
    //    project root - find "transport select [swd|jtag]" and specify the appropriate interface.
    //    To use JLink JTAG interface, update corresponding JLink configuration. Set "interface"
    //    property to "jtag" and delete the "_tm" suffix (if present) in the "device" property.
    //
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Program with PyOCD",
            "type": "cortex-debug",
            "request": "launch",
            "cwd": "${workspaceFolder}",
            "executable": "./bin/first-project.elf",
            "servertype": "pyocd",
            "serverArgs": [
                "-t",
                "cy8c624abzi-d44"
            ],
            "overrideLaunchCommands": [
                "load ./bin/first-project.hex",
                "-interpreter-exec console \"monitor writedp 0x04 0x00\"",
                "-interpreter-exec console \"monitor reset hw\"",
            ],
            "postStartSessionCommands": [
                "quit"
            ],
            "numberOfProcessors": 2,
            "preLaunchTask": "Docker Build",
            "showDevDebugOutput": "none",
            "presentation": {
                "hidden": false,
                "group": "CM4"
            }
        },
        {
            "name": "Debug (PyOCD)",
            //"cwd": "${fileDirname}",
            "executable": "./bin/first-project.elf",
            "request": "launch",
            "type": "cortex-debug",
            "servertype": "pyocd",
            "interface": "swd",
            "preLaunchTask": "Docker Build",
            "numberOfProcessors": 2,
            "targetProcessor": 1, // Set to 0 for the CM0+, set to 1 for the CM4
            "serverArgs": [
                "-t",
                "cy8c624abzi-d44"
            ],
            // "rtos": "ThreadX",
            "rttConfig": {
                "enabled": true,
                "address": "auto",
                "decoders": [
                    {
                        "label": "",
                        "port": 0,
                        "type": "console"
                    }
                ]
            },
            "postLaunchCommands": [
                "set substitute-path /code/sdk ../mtb_shared",
                "set substitute-path /code/ ."
            ],
            "postStartSessionCommands": [
                // Needed if runToMain is false 
                // Following two commands are needed to get gdb and openocd and HW all in sync. 
                // Or, execution context (PC, stack, registers, etc.) look like they are from before reset. 
                // The stepi, is a pretend instruction that does not actually do a stepi, but MUST be done 
                // Its a documented workaround in openocd. Do a 'monitor help' to see more info 
                // 
                // An alternative command to use is "continue" instead of the following two 
                "monitor gdb_sync",
                "stepi"
            ],
            // "overrideRestartCommands": [
            //     "starti"
            // ],
            "postRestartSessionCommands": [],
            // svdFile is optional, it can be very large.
            "svdFile": "../mtb_shared/mtb-pdl-cat1/release-v3.12.0/devices/COMPONENT_CAT1A/svd/psoc6_02.svd",
            "breakAfterReset": true,
            "runToEntryPoint": "main", // Specifies application entry point name where program will halt
            "presentation": {
                "hidden": false,
                "group": "CM4"
            }
        },
        // {
        //"name": "Launch PSoC6 CM4 (KitProg3_MiniProg4)",
        //"type": "cortex-debug",
        //"request": "launch",
        //"cwd": "${workspaceFolder}",
        //"executable": "./build/APP_CY8CKIT-062S2-AI/Debug/mtb-example-hal-hello-world.elf",
        //"servertype": "openocd",
        //"searchDir": [
        //    "${workspaceFolder}",
        //    "${config:modustoolbox.toolsPath}/../../ModusToolboxProgtools-1.2.1/openocd/scripts/",
        //    "bsps/TARGET_APP_CY8CKIT-062S2-AI/config/GeneratedSource"
        //],
        //"configFiles": [
        //    "openocd.tcl"
        //],
        //"overrideLaunchCommands": [
        //    "set mem inaccessible-by-default off",
        //    "-enable-pretty-printing",
        //    "set remotetimeout 15",
        //    // Comment this next line out if you don't want to reload program
        //    "monitor program {./build/APP_CY8CKIT-062S2-AI/Debug/mtb-example-hal-hello-world.hex}",
        //    "monitor reset run",
        //    "monitor psoc6 reset_halt sysresetreq"
        //],
        //"numberOfProcessors": 2,
        //"targetProcessor": 1, // Set to 0 for the CM0+, set to 1 for the CM4
        //"postStartSessionCommands": [
        //    // Needed if runToMain is false 
        //    // Following two commands are needed to get gdb and openocd and HW all in sync. 
        //    // Or, execution context (PC, stack, registers, etc.) look like they are from before reset. 
        //    // The stepi, is a pretend instruction that does not actually do a stepi, but MUST be done 
        //    // Its a documented workaround in openocd. Do a 'monitor help' to see more info 
        //    // 
        //    // An alternative command to use is "continue" instead of the following two 
        //    "monitor gdb_sync",
        //    "stepi"
        //],
        //"overrideRestartCommands": [
        //    "starti"
        //],
        //"postRestartSessionCommands": [],
        //// svdFile is optional, it can be very large.
        //"svdFile": "../mtb_shared/mtb-pdl-cat1/release-v3.12.0/devices/COMPONENT_CAT1A/svd/psoc6_02.svd",
        //"breakAfterReset": true,
        //"runToEntryPoint": "main", // Specifies application entry point name where program will halt
        //"preLaunchTask": "Build",
        //"showDevDebugOutput": "none",
        //"presentation": {
        //    "hidden": false,
        //    "group": "CM4"
        //}
        //// },
        //// // When using 'attach', make sure your program is running on the board and that your
        //// // executable matches the image in the chip exactly, or else strange things can happen
        //// // with breakpoints, variables, etc.
        //// {
        //"name": "Attach PSoC6 CM4 (KitProg3_MiniProg4)",
        //"type": "cortex-debug",
        //"request": "attach",
        //"cwd": "${workspaceFolder}",
        //"executable": "./build/APP_CY8CKIT-062S2-AI/Debug/mtb-example-hal-hello-world.elf",
        //"servertype": "openocd",
        //"searchDir": [
        //    "${workspaceFolder}",
        //    "${config:modustoolbox.toolsPath}/../../ModusToolboxProgtools-1.2.1/openocd/scripts/"
        //],
        //"openOCDPreConfigLaunchCommands": [
        //    "set ENABLE_ACQUIRE 0"
        //],
        //"configFiles": [
        //    "openocd.tcl"
        //],
        //"overrideAttachCommands": [
        //    "set mem inaccessible-by-default off",
        //    "-enable-pretty-printing",
        //    "set remotetimeout 15",
        //    "info threads"
        //],
        //"numberOfProcessors": 2,
        //"targetProcessor": 1, // Set to 0 for the CM0+, set to 1 for the CM4
        //"overrideRestartCommands": [
        //    "starti"
        //],
        //"postRestartSessionCommands": [],
        //// svdFile is optional, it can be very large.
        //"svdFile": "../mtb_shared/mtb-pdl-cat1/release-v3.12.0/devices/COMPONENT_CAT1A/svd/psoc6_02.svd",
        //"breakAfterReset": true,
        //"runToEntryPoint": "main", // Specifies application entry point name for restart/reset
        //"showDevDebugOutput": "none",
        //"presentation": {
        //    "hidden": false,
        //    "group": "CM4"
        //}
        // },
        // {
        //"name": "Erase (KitProg3_MiniProg4)",
        //"type": "cortex-debug",
        //"request": "launch",
        //"cwd": "${workspaceFolder}",
        //"executable": "./build/APP_CY8CKIT-062S2-AI/Debug/mtb-example-hal-hello-world.elf",
        //"servertype": "openocd",
        //"searchDir": [
        //    "${workspaceFolder}",
        //    "${config:modustoolbox.toolsPath}/../../ModusToolboxProgtools-1.2.1/openocd/scripts/"
        //],
        //"openOCDPreConfigLaunchCommands": [
        //    "set DISABLE_SMIF 1"
        //],
        //"configFiles": [
        //    "openocd.tcl"
        //],
        //"overrideLaunchCommands": [
        //    "set remotetimeout 15",
        //    "monitor reset init",
        //    "monitor psoc6 sflash_restrictions 1",
        //    "monitor erase_all"
        //],
        //"postStartSessionCommands": [
        //    "quit"
        //],
        //"numberOfProcessors": 2,
        //"showDevDebugOutput": "none",
        //"presentation": {
        //    "hidden": false,
        //    "group": "CM4"
        //}
        //// },
        //// {
        //"name": "Program (KitProg3_MiniProg4)",
        //"type": "cortex-debug",
        //"request": "launch",
        //"cwd": "${workspaceFolder}",
        //"executable": "./build/APP_CY8CKIT-062S2-AI/Debug/mtb-example-hal-hello-world.elf",
        //"servertype": "openocd",
        //"searchDir": [
        //    "${workspaceFolder}",
        //    "${config:modustoolbox.toolsPath}/../../ModusToolboxProgtools-1.2.1/openocd/scripts/",
        //    "bsps/TARGET_APP_CY8CKIT-062S2-AI/config/GeneratedSource"
        //],
        //"configFiles": [
        //    "openocd.tcl"
        //],
        //"overrideLaunchCommands": [
        //    "set remotetimeout 15",
        //    "monitor psoc6 sflash_restrictions 1",
        //    "monitor program {./build/APP_CY8CKIT-062S2-AI/Debug/mtb-example-hal-hello-world.hex}",
        //    "monitor reset_config srst_only",
        //    "monitor reset run",
        //    "monitor psoc6.dap dpreg 0x04 0x00"
        //],
        //"postStartSessionCommands": [
        //    "quit"
        //],
        //"numberOfProcessors": 2,
        //"preLaunchTask": "Build",
        //"showDevDebugOutput": "none",
        //"presentation": {
        //    "hidden": false,
        //    "group": "CM4"
        //}
        //// }
    ]
}